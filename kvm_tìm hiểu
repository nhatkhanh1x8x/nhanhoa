Mục lục
1. Ảo hóa KVM/QEMU
1.1. Giới thiệu
1.2. Các tính năng của ảo hóa KVM
2. Cài đặt KVM
2.1. Kiểm tra cấu hình hệ thống và cài đặt
2.2. Cấu hình

1. Ảo hóa KVM
1.1. Giới thiệu
KVM ra đời phiên bản đầu tiên vào năm 2007 bởi công ty Qumranet tại Isarel, KVM được tích hợp sẵn vào nhân của hệ điều hành Linux bắt đầu từ phiên bản 2.6.20. Năm 2008, RedHat đã mua lại Qumranet và bắt đầu phát triển, phổ biến KVM Hypervisor.

KVM (Kernel-based virtual machine) là giải pháp ảo hóa cho hệ thống linux trên nền tảng phần cứng x86 có các module mở rộng hỗ trợ ảo hóa (Intel VT-x hoặc AMD-V).

Về bản chất, KVM không thực sự là một hypervisor có chức năng giải lập phần cứng để chạy các máy ảo. Chính xác KVM chỉ là một module của kernel linux hỗ trợ cơ chế mapping các chỉ dẫn trên CPU ảo (của guest VM) sang chỉ dẫn trên CPU vật lý (của máy chủ chứa VM). Hoặc có thể hình dung KVM giống như một driver cho hypervisor để sử dụng được tính năng ảo hóa của các vi xử lý như Intel VT-x hay AMD-V, mục tiêu là tăng hiệu suất cho guest VM.

KVM hiện nay được thiết kế để giao tiếp với các hạt nhân thông qua một kernel module có thể nạp được. Hỗ trợ một loạt các hệ thống điều hành máy guest như: Linux, BSD, Solaris, Windows, Haiku, ReactOS và hệ điều hành nghiên cứu AROS. Sử dụng kết hợp với QEMU, KVM có thể chạy Mac OS X.

Trong kiến trúc của KVM, Virtual machine được thực hiện như là quy trình xử lý thông thường của Linux, được lập lịch hoạt động như các scheduler tiểu chuẩn của Linux. Trên thực tế, mỗi CPU ảo hoạt động như một tiến trình xử lý của Linux. Điều này cho phép KVM được hưởng lợi từ tất cả các tính năng của nhân Linux.

1.2. Các tính năng của ảo hóa KVM
KVM là một phần của Linux, đồng thời Linux cũng là một phần của KVM. Mọi tính năng Linux có KVM cũng có. Nhưng có những tính năng cụ thể làm cho KVM trở thành một trình ảo hóa ưa thích của doanh nghiệp.

* Bảo mật	
KVM sử dụng kết hợp Linux tăng cường bảo mật (SELinux) và ảo hóa bảo mật (sVirt) để tăng cường bảo mật và cách ly VM. SELinux thiết lập ranh giới bảo mật xung quanh máy ảo. sVirt mở rộng khả năng của SELinux, cho phép bảo mật Kiểm soát truy cập bắt buộc (MAC) được áp dụng cho máy ảo khách và ngăn ngừa lỗi ghi nhãn thủ công.
* Lưu trữ	
KVM có thể sử dụng bất kỳ bộ lưu trữ nào được Linux hỗ trợ, bao gồm một số đĩa cục bộ và bộ lưu trữ gắn mạng (NAS).
KVM cũng hỗ trợ các hệ thống tệp được chia sẻ để hình ảnh ảo hóa có thể được chia sẻ bởi nhiều máy chủ.
* Hỗ trợ phần cứng
KVM có thể sử dụng nhiều nền tảng phần cứng được chứng nhận hỗ trợ Linux.
* Quản lý bộ nhớ	
KVM kế thừa các tính năng quản lý bộ nhớ của Linux, bao gồm truy cập bộ nhớ không đồng nhất và hợp nhất kernel cùng trang. Bộ nhớ của ảo hóa có thể được hoán đổi, được hỗ trợ bởi khối lượng lớn để có hiệu suất tốt hơn và được chia sẻ hoặc sao lưu bởi một tệp đĩa.
* Di chuyển ảo hóa trực tiếp	
KVM hỗ trợ di chuyển ảo hóa trực tiếp, đó là di chuyển một chương trình ảo hóa đang chạy giữa các máy chủ vật lý mà không bị gián đoạn dịch vụ. Ảo hóa vẫn được bật, các kết nối mạng vẫn hoạt động và các ứng dụng tiếp tục chạy trong khi VM được di chuyển. KVM cũng lưu trạng thái hiện tại của ảo hóa để có thể lưu trữ và tiếp tục lại sau này.
* Hiệu suất và khả năng mở rộng	
KVM kế thừa hiệu năng của Linux, mở rộng để phù hợp với tải nhu cầu nếu số lượng máy khách và yêu cầu tăng lên. KVM cho phép khối lượng công việc ứng dụng đòi hỏi khắt khe nhất được ảo hóa và là cơ sở cho nhiều thiết lập ảo hóa doanh nghiệp, chẳng hạn như trung tâm dữ liệu và đám mây riêng.
* Độ trễ thấp hơn	
Linux có các phần mở rộng thời gian thực cho phép các ứng dụng dựa trên ảo hóa chạy ở độ trễ thấp hơn với mức độ ưu tiên tốt hơn. Đồng thời cũng phân chia các quá trình đòi hỏi thời gian tính toán dài thành các thành phần nhỏ hơn, sau đó được lên lịch và xử lý tương ứng.
* Quản lý với KVM	

Với KVM có thể quản lý thủ công một số chương trình ảo hóa được kích hoạt trên một máy trạm mà không cần công cụ quản lý.
Các doanh nghiệp lớn sử dụng phần mềm quản lý ảo hóa có giao diện với môi trường ảo và phần cứng vật lý cơ bản để đơn giản hóa việc quản trị tài nguyên, tăng cường phân tích dữ liệu và hợp lý hóa các hoạt động.


2. Các bước cài đặt thiết lập hệ thống ảo hóa KVM

Với các ưu điểm về nguồn mở, tính ổn định, hiệu suất cao, việc triển khai KVM ở quy mô nhỏ cũng hoàn toàn dễ dàng và phù hợp với các môi trường SMB. Để thiết lập và quản trị một hệ thống ảo hóa KVM có thể thực hiện thông qua 5 thao tác cơ bản sau:
B1. Cài đặt HĐH Linux cho máy chủ.
HĐH thông thường được lựa chọn là CentOS (6.x, 7.x) hoặc Ubuntu, Debian. Bước này yêu cầu máy chủ phải hỗ trợ công nghệ ảo hóa.
Để khai thác hiệu quả tài nguyên, hệ điều hành được cài đặt trên máy chủ được khuyến cáo sử dụng bản “Minimal” – đây là bản đã được tinh giảm, chỉ giữ lại những thành phần cần thiết cho một máy chủ.
Máy chủ phải được thiết lập địa chỉ IP tĩnh để thuận tiện trong quản trị và giám sát.
B2. Cài đặt Hypervisor KVM lên máy chủ
Cài đặt các phần mềm cần thiết cho KVM Hypervisor, bao gồm các thành phần chính sau: kvm qemu-kvm libvirt bridge-utils.
Khởi động các dịch vụ liên quan như libvirtd và messagebus
#/etc/rc.d/init.d/libvirtd start
#/etc/rc.d/init.d/messagebus start
# …
B3. Cài đặt phần mềm Virtual Machine Manager trên máy Linux Client (CentOS)
Tiến hành cài đặt phần mềm Virtual Machine Manager trên 01 máy Linux để quản trị các máy chủ KVM – Hypervisor
Trên HĐH CentOS sử dụng lệnh sau để cài đặt: #yum install virt-manager
B4. Quản trị KVM host (Máy chủ) bằng phần mềm Virtual Machine Manager trên máy Client (CentOS)
VMM cho phép thực hiện các thao tác quản trị máy ảo như: tạo máy ảo, thay đổi máy ảo (sửa, xóa, nâng cấp phần cứng), quản trị thông qua command-line, …
